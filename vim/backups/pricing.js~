'use strict';
describe('Factory pricer', function(){
  var price, pricer;
  beforeEach(function(){
    module('app');
    inject(function(_pricer_){pricer = _pricer_ });
    price = pricer.price;
  });

  it('should expose an initially empty basket creator', function(){
    expect(pricer.emptyBasket()).not.toBe(pricer.emptyBasket());
    expect(pricer.emptyBasket()).toEqual([0,0,0,0,0]);
  });

  describe('should expose function price()', function(){
    function test(basket, result){
      expect(price(basket)).toBe(result);
    }
    it('should price an empty basket', function(){
      test([0,0,0,0,0], 0);
    });
    it('should price a singleton basket', function(){
      test([1,0,0,0,0], 8);
      test([0,1,0,0,0], 8);
      test([0,0,1,0,0], 8);
      test([0,0,0,1,0], 8);
      test([0,0,0,0,1], 8);
      test([2,0,0,0,0], 16);
    });
    it('should price a two-book basket', function(){
      test([1,1,0,0,0], 8 * 2 * 0.95);
      test([1,0,1,0,0], 8 * 2 * 0.95);
      test([1,0,0,1,0], 8 * 2 * 0.95);
      test([1,0,0,0,1], 8 * 2 * 0.95);
      test([0,1,1,0,0], 8 * 2 * 0.95);
      test([0,1,0,1,0], 8 * 2 * 0.95);
      test([0,1,0,0,1], 8 * 2 * 0.95);
      test([0,0,1,1,0], 8 * 2 * 0.95);
      test([0,0,1,0,1], 8 * 2 * 0.95);
      test([0,0,0,1,1], 8 * 2 * 0.95);
      test([2,2,0,0,0], 8 * 4 * 0.95);
    });
    it('should price a three-book basket', function(){
      test([0,0,1,1,1], 8 * 3 * 0.90);
      test([0,1,0,1,1], 8 * 3 * 0.90);
      test([0,1,1,0,1], 8 * 3 * 0.90);
      test([0,1,1,1,0], 8 * 3 * 0.90);
      test([1,0,0,1,1], 8 * 3 * 0.90);
      test([1,0,1,0,1], 8 * 3 * 0.90);
      test([1,0,1,1,0], 8 * 3 * 0.90);
      test([1,1,0,0,1], 8 * 3 * 0.90);
      test([1,1,0,1,0], 8 * 3 * 0.90);
      test([1,1,1,0,0], 8 * 3 * 0.90);
      test([2,2,2,0,0], 8 * 6 * 0.90);
    });
    it('should price a four-book basket', function(){
      test([1,1,1,1,0], 8 * 4 * 0.80);
      test([1,1,1,0,1], 8 * 4 * 0.80);
      test([1,1,0,1,1], 8 * 4 * 0.80);
      test([1,0,1,1,1], 8 * 4 * 0.80);
      test([0,1,1,1,1], 8 * 4 * 0.80);
      test([0,2,2,2,2], 8 * 8 * 0.80);
    });
    it('should price a five-book basket', function(){
      test([1,1,1,1,1], 8 *  5 * 0.75);
      test([2,2,2,2,2], 8 * 10 * 0.75);
    });
    it('should handle two edge cases', function(){
      test([2,2,2,1,1], 2 * (8 * 4 * 0.8));
      test([5,5,5,4,4], 3 * (8 * 5 * 0.75) + 2 * (8 * 4 * 0.8));
    });
  });
  
});
