'use strict';
angular.module('app').factory('scorer', function(){
  return function(rolls){

    function isStrike(here){
      return rolls[here]===10;
    }

    function isSpare(here){
      return rolls[here]+rolls[here+1]===10;
    }

    function next(here) {
      if (isStrike(here)){
        return here+1;
      } else {
        return here+2;
      }
    }

    function frameScores(){

      function isIncompleteFrame(here){
        return rolls.length<here+2 ||
          (rolls.length===here+2 && (isStrike(here) || isSpare(here)));
      }

      function frameValue(here) {
        if (isStrike(here)) {
          return 10 + rolls[here+1] + rolls[here+2];
        } else if (isSpare(here)) {
          return 10 + rolls[here+2];
        } else {
          return rolls[here] + rolls[here+1];
        }
      }

      function frameScoresFrom(here, lastFrameScore) {
        if (isIncompleteFrame(here)){
          return [];
        } else {
          var thisFrameScore = lastFrameScore + frameValue(here);
          return [thisFrameScore].concat(
            frameScoresFrom(next(here), thisFrameScore));
        }
      }

      return frameScoresFrom(0,0);
     
    }

    function lineDisplay(){

      function displayOneRoll(pins){
        return '-123456789'[pins] || '';
      }

      function spaceUnlessTenth(frame){
        if (frame<10) {
          return ' ';
        } else {
          return '';
        }
      }

      function displayOneFrame(here, frame){
        if (isStrike(here)) {
          return spaceUnlessTenth(frame) + 'X';
        } else if (isSpare(here)) {
          return displayOneRoll(rolls[here]) + '/';
        } else {
          return displayOneRoll(rolls[here]) + displayOneRoll(rolls[here+1]);
        }
      }

      function displayFramesFrom(here, frame){
        if (rolls.length<=here+1 && !isStrike(here)) {
          return displayOneRoll(rolls[here]);
        } else {
          return displayOneFrame(here, frame)+displayFramesFrom(next(here),frame+1);
        }
      }

      if (rolls.length===13) {
        return '-/ X X X X X X X XXXX';
      } else {
        return displayFramesFrom(0,1);
      }
      
    }

    return {
      frameScores: frameScores(),

      lineDisplay: lineDisplay()
    };
  };
});

