'use strict';
ddescribe( 'Controller MainCtrl', function() {
  var $scope;
  var ns = {
    scorer: function(){},
    mockScorer: {mock: 'mockScorer'}
  };

  beforeEach( module ( 'app' ) );
  beforeEach( inject( function($controller, $rootScope) {
    spyOn( ns, 'scorer' ).andReturn(ns.mockScorer);
    $scope = $rootScope.$new();
    $controller( 'MainCtrl', {
      $scope: $scope,
      scorer: ns.scorer
    });
  }));

  it( 'should provide an initially empty rolls', function() {
    expect( $scope.rolls ).toEqual( [] );
  });

  it( 'should add a gutter roll', function() {
    $scope.addRoll(0);
    expect( $scope.rolls ).toEqual( [0] );
  });

  it( 'should add a non-gutter roll', function() {
    $scope.addRoll(10);
    expect( $scope.rolls ).toEqual( [10] );
  });

  it( 'should add two rolls', function() {
    $scope.addRoll(0);
    $scope.addRoll(10);
    expect( $scope.rolls ).toEqual( [0, 10] );
  });

  it( 'should initially use the scorer', function() {
    expect( ns.scorer ).toHaveBeenCalledWith( [] );
    expect( $scope.scorer ).toBe( ns.mockScorer );
  });

  it( 'should use the scorer for subsequent rolls', function() {
    $scope.scorer = null;
    $scope.addRoll(5);
    expect( ns.scorer ).toHaveBeenCalledWith( [5] );
    expect( $scope.scorer ).toBe( ns.mockScorer );
  });

});
