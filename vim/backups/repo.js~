'use strict';
ddescribe('Factory repository', function(){
  var repository;
  beforeEach(function(){
    module('app');
    inject(function(_repository_){
      repository = _repository_;
    });
  });
  describe('list, read() and init()', function(){
    it('without initialization, list should be empty and identical to read()', function(){
      expect(repository.list.length).toBe(0);
      expect(repository.read()).toBe(repository.list);
    });
    it('with initialization, list should $equal input and identical to read()', function(){
      var originalList = repository.list;
      var initializer = [mock('one'), mock('two'), mock('three')];

      repository.init(initializer);

      expect(repository.list).to$Equal(initializer, 'are $equal');
      expect(repository.read()).toBe(repository.list, 'read() and list identical');
      expect(repository.list).toBe(originalList, 'list unchanged');;
    });
  });
  function mock(text){
    return {mock: text};
  }
});
