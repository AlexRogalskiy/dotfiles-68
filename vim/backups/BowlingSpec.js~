// Generated by CoffeeScript 1.3.1
(function() {
  var rollMany;

  rollMany = function(game, times, pins) {
    var i, _i, _results;
    _results = [];
    for (i = _i = 1; 1 <= times ? _i <= times : _i >= times; i = 1 <= times ? ++_i : --_i) {
      _results.push(game.roll(pins));
    }
    return _results;
  };

  describe("Bowling", function() {
    beforeEach(function() {
      return this.game = new window.Bowling;
    });
    it("should score a gutter game", function() {
      rollMany(this.game, 20, 0);
      return expect(this.game.score()).toEqual(0);
    });
    it("should score a 1-pin game", function() {
      rollMany(this.game, 20, 1);
      return expect(this.game.score()).toEqual(20);
    });
    it("should score a single spare game", function() {
      this.game.roll(5);
      this.game.roll(5);
      this.game.roll(3);
      rollMany(this.game, 17, 0);
      return expect(this.game.score()).toEqual(16);
    });
    it("should score a single strike game", function() {
      this.game.roll(10);
      this.game.roll(3);
      this.game.roll(4);
      rollMany(this.game, 16, 0);
      return expect(this.game.score()).toEqual(24);
    });
    return it("should score a perfect game", function() {
      rollMany(this.game, 12, 10);
      return expect(this.game.score()).toEqual(300);
    });
  });

}).call(this);
