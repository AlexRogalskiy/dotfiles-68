describe "Integration:", ->

  app = $('')

  beforeEach module "newbowlingApp"
  beforeEach module "views/main.html"

  beforeEach inject ($compile, $rootScope)->
    html = '''
      <div ng-app="newbowlingApp">
        <div ng-view></div>
      </div>
    '''
    app = ($compile html) $rootScope.$new()
    $rootScope.$digest()

  it "has a correct header", ->
    (expect app.find('h1').text()).toBe "Superheroic Bowling"

  expectRollsDisplayToBe = (str)->
    (expect app.find('.rolls-display').text()).toBe str 

  roll = (pins)->
    app.find('.roll').eq(pins).click()
  reset = ->
    app.find('.reset').click()


  describe "DATA ENTRY", ->

    describe "input means", ->
      it "should have 11 clickable roll tags", ->
        (expect app.find('.roll').length).toBe 11
      it "should have a clickable reset tag", ->
        (expect app.find('.reset').length).toBe 1

    describe "output means", ->
      it "should display an initially empty rolls list", ->
        expectRollsDisplayToBe "[]"

    describe "entry means", ->
      it "should enter a gutter roll", ->
        roll 0
        expectRollsDisplayToBe "[0]"
      it "should enter a pindrop roll", ->
        roll 5
        expectRollsDisplayToBe "[5]"
      it "should enter two rolls", ->
        roll 0; roll 5
        expectRollsDisplayToBe "[0,5]"
      it "should reset to an empty roll list", ->
        roll 0
        reset()
        expectRollsDisplayToBe "[]"


  frameScores = ->
    app.find('.frame-score-display').get().
      map((elt)->$(elt).text()).
      filter((str)->str!='')
  frameScoresDisplay = ->
    "[#{frameScores().join(',')}]"
  expectFrameScoresDisplayToBe = (str)->
    (expect frameScoresDisplay()).toBe str
  

  describe "SCORING", ->
    it "should display an initially empty frame scores list", ->
      expectFrameScoresDisplayToBe "[]"

    it "should display a perfect game", ->
      roll 10 for i in [1..12]
      expectFrameScoresDisplayToBe "[30,60,90,120,150,180,210,240,270,300]"

  expectRollDisplayToBe = (str)->
    (expect app.find('.roll-display').text()).toBe str

  describe "ROLL DISPLAY", ->
    it "should display an initially empty string of rolls", ->
      expectRollDisplayToBe ""
    it "should display a gutter ball roll", ->
      roll 0
      expectRollDisplayToBe "-"
    it "should display a non-gutter ball roll", ->
      roll 5
      expectRollDisplayToBe "5"
      reset()
      roll 6
      expectRollDisplayToBe "6"
    it "should display two rolls", ->
      roll 0; roll 5
      expectRollDisplayToBe "-5"
